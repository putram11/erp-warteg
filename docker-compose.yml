version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: warteg-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-warteg_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-warteg_password}
      POSTGRES_DB: ${POSTGRES_DB:-warteg_db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - warteg-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: warteg-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-warteg_user}:${POSTGRES_PASSWORD:-warteg_password}@postgres:5432/${POSTGRES_DB:-warteg_db}?schema=public
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${BACKEND_PORT:-5000}
      HOST: ${BACKEND_HOST:-0.0.0.0}
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_prisma:/app/node_modules/.prisma
    networks:
      - warteg-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: warteg-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://backend:5000/api
      NODE_ENV: ${NODE_ENV:-development}
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - warteg-network
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:
  backend_prisma:

networks:
  warteg-network:
    driver: bridge
