version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: warteg-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-warteg_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-warteg_password}
      POSTGRES_DB: ${POSTGRES_DB:-warteg_db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - warteg-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-warteg_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  erp-warteg:
    image: ${DOCKER_USERNAME}/erp-warteg:latest
    container_name: warteg-app-prod
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-warteg_user}:${POSTGRES_PASSWORD:-warteg_password}@postgres:5432/${POSTGRES_DB:-warteg_db}?schema=public
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      NODE_ENV: production
    ports:
      - "3000:3000"
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - warteg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: warteg-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - erp-warteg
    networks:
      - warteg-network

volumes:
  postgres_data_prod:

networks:
  warteg-network:
    driver: bridge
